"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var error_1 = require("../error");
function parseRecordReferenceExpr(tt, parseExpr, scope, prevExpr) {
    tt.next(); // Skip `->`
    /* Check if the prevExpr returns record */
    var prevExprType = prevExpr.return.type;
    if (!scope.hasRecord(prevExprType))
        error_1.ParserError("Type `" + prevExpr.return + "` is not a kind of record");
    /* Check if next token is of type `ident` and is property of record */
    if (tt.isNot('ident'))
        error_1.ParserError("Expect next token to be `ident` when referening property of a record, instead got token of type `" + tt.type + "`");
    var propName = tt.value;
    var record = scope.getRecord(prevExprType);
    if (!record.hasProperty(propName))
        error_1.ParserError("Property `" + propName + "` isn't declared in record `" + record.name + "`");
    var recordProp = record.getProperty(propName);
    return {
        type: 'RecordReferenceExpr',
        recordExpr: prevExpr,
        property: recordProp.name,
        return: recordProp.type,
    };
}
exports.parseRecordReferenceExpr = parseRecordReferenceExpr;
