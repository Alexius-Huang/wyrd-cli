import Parameter from './Parameter';
import DT from './DataType';
export default class FunctionObject {
    name: string;
    patterns: FunctionPattern[];
    patternIndex: number;
    constructor(name: string);
    createNewPattern(parameter: Parameter, outputType: DT): FunctionPattern;
    getPatternInfo(parameter: Parameter): FunctionPattern | undefined;
}
export declare class FunctionPattern {
    _name: string;
    parameter: Parameter;
    returnDataType: DT;
    private overridenIndex;
    constructor(_name: string, parameter: Parameter, returnDataType: DT);
    get name(): string;
    override(): void;
}
