"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FunctionObject = /** @class */ (function () {
    function FunctionObject(name) {
        this.name = name;
        this.patterns = [];
        this.patternIndex = 0;
    }
    FunctionObject.prototype.createNewPattern = function (parameter, outputType) {
        var referenceName = this.patternIndex === 0 ? this.name : this.name + "_" + this.patternIndex;
        var pattern = new FunctionPattern(referenceName, parameter, outputType);
        this.patterns.push(pattern);
        this.patternIndex++;
        return pattern;
    };
    FunctionObject.prototype.getPatternInfo = function (parameter) {
        for (var i = 0; i < this.patterns.length; i += 1) {
            var p = this.patterns[i].parameter;
            if (p.matches(parameter))
                return this.patterns[i];
        }
        return undefined;
    };
    return FunctionObject;
}());
exports.default = FunctionObject;
var FunctionPattern = /** @class */ (function () {
    function FunctionPattern(_name, parameter, returnDataType) {
        this._name = _name;
        this.parameter = parameter;
        this.returnDataType = returnDataType;
        this.overridenIndex = 0;
    }
    Object.defineProperty(FunctionPattern.prototype, "name", {
        get: function () {
            return this.overridenIndex === 0 ? this._name : this._name + "$" + this.overridenIndex;
        },
        enumerable: true,
        configurable: true
    });
    FunctionPattern.prototype.override = function () {
        this.overridenIndex++;
    };
    return FunctionPattern;
}());
exports.FunctionPattern = FunctionPattern;
