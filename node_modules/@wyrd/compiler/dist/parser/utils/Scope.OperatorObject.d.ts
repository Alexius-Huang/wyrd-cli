import DT from './DataType';
declare type OperatorObjectInitialzeOptions = {
    isNotBuiltin?: boolean;
};
export default class OperatorObject {
    name: string;
    patterns: OperatorPattern[];
    patternIndex: number;
    constructor(name: string);
    createNewPattern(opType1: DT, opType2: DT, outputType: DT, options?: OperatorObjectInitialzeOptions): OperatorPattern;
    getPatternInfo(opType1: DT, opType2: DT): OperatorPattern | undefined;
}
export declare class OperatorPattern {
    _name: string;
    opType1: DT;
    opType2: DT;
    returnDataType: DT;
    overridenIndex: number;
    isNotBuiltin: boolean;
    constructor(_name: string, opType1: DT, opType2: DT, returnDataType: DT);
    get name(): string;
    override(): void;
}
export {};
