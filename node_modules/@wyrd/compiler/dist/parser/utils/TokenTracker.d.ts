import * as T from '../../types';
export default class TokenTracker {
    readonly tokens: Array<T.Token>;
    private index;
    constructor(tokens: Array<T.Token>);
    get current(): T.Token;
    get type(): string;
    get value(): string;
    get peek(): T.Token | null;
    next(): T.Token;
    is(type: string): boolean;
    valueIs(value: string): boolean;
    peekValueIs(value: string): boolean;
    isNot(type: string): boolean;
    valueIsNot(value: string): boolean;
    isOneOf(...types: Array<string>): boolean;
    valueIsOneOf(...values: Array<string>): boolean;
    peekValueIsOneOf(...values: Array<string>): boolean;
    isNotOneOf(...types: Array<string>): boolean;
    valueIsNotOneOf(...values: Array<string>): boolean;
    peekIs(type: string): boolean;
    hasNext(): boolean;
}
