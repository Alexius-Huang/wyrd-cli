"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _1 = require(".");
var error_1 = require("../error");
var Record = /** @class */ (function () {
    function Record(name) {
        this.name = name;
        this.properties = new Map();
        this.propertySet = new Set();
    }
    Object.defineProperty(Record.prototype, "type", {
        get: function () { return new _1.DataType(this.name); },
        enumerable: true,
        configurable: true
    });
    Record.prototype.setProperty = function (type, name) {
        if (this.propertySet.has(name))
            error_1.ParserError("Property `" + name + "` in `" + this.name + "` has already been declared");
        this.propertySet.add(name);
        this.properties.set(name, { type: type, name: name });
        return this;
    };
    Record.prototype.getProperty = function (name) {
        if (this.hasProperty(name))
            return this.properties.get(name);
        error_1.ParserError("Property `" + name + "` isn't existed in definition of record `" + this.name + "`");
    };
    Record.prototype.hasProperty = function (name) {
        return this.propertySet.has(name);
    };
    return Record;
}());
exports.default = Record;
