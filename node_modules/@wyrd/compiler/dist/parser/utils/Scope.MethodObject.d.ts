import DT from './DataType';
import Parameter from './Parameter';
declare type MethodObjectInitialzeOptions = {
    directMapping?: string;
    isNotBuiltin?: boolean;
};
export default class MethodObject {
    name: string;
    patterns: MethodPattern[];
    patternIndex: number;
    constructor(name: string);
    createNewPattern(parameter: Parameter, outputType: DT, options?: MethodObjectInitialzeOptions): MethodPattern;
    getPatternInfo(receiver: DT, parameter: Parameter): MethodPattern | undefined;
}
export declare class MethodPattern {
    _name: string;
    parameter: Parameter;
    returnDataType: DT;
    overridenIndex: number;
    isNotBuiltin: boolean;
    constructor(_name: string, parameter: Parameter, returnDataType: DT);
    get name(): string;
    override(): void;
}
export {};
