"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../utils");
var error_1 = require("../error");
function parseFunctionArguments(tt, scope) {
    tt.next();
    var result = [];
    while (true) {
        var argument = { ident: '', type: utils_1.DataType.Invalid };
        if (tt.is('ident')) {
            argument.ident = tt.value;
            tt.next();
            if (tt.isNot('colon'))
                error_1.ParserError('Expect token next to the name of the argument is colon');
            tt.next();
            if (tt.isNot('builtin-type'))
                error_1.ParserError('Expect token next to the colon of the argument declaration is data-type');
            argument.type = new utils_1.DataType(tt.value);
            tt.next();
            // Setting variable infos from arguments
            // TODO: Handle duplicate argument name case
            result.push(argument);
            scope.createConstant(argument.ident, argument.type);
            if (tt.is('comma')) {
                tt.next();
                continue;
            }
            if (tt.is('rparen')) {
                tt.next();
                break;
            }
            error_1.ParserError('Expect token after argument declaration to be comma or right-parenthesis');
        }
    }
    return result;
}
exports.parseFunctionArguments = parseFunctionArguments;
