"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var error_1 = require("../error");
function parseBlock(tt, parseExpr, scope, prevExpr) {
    "";
    tt.next(); // Skip keyword `do`
    error_1.ParserErrorIf(tt.isNot('newline'), 'Invalid to contain any expressions after the `do` keyword');
    tt.next(); // Skip newline
    if (prevExpr.type === 'FunctionDeclaration' ||
        prevExpr.type === 'MethodDeclaration') {
        while (!(tt.is('keyword') && tt.valueIs('end'))) {
            if (tt.is('newline')) {
                tt.next();
                continue;
            }
            prevExpr.body.push(parseExpr(undefined, { scope: scope, ast: prevExpr.body }));
            tt.next();
        }
        tt.next();
        return prevExpr;
    }
    error_1.ParserError("Unhandled parsing block-level expression with expression of type `" + prevExpr.type + "`");
}
exports.parseBlock = parseBlock;
