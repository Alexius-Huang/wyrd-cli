declare const program = "mutable age = 1 + 2 * 3 + 4\nadultBound = 18\nelderBound = 60\ncentenarianBound = 100\n\nstage = if age <= adultBound => \"Teenager\"\n        elif age < elderBound then\n          \"Adult\"\n        elif age < centenarianBound => \"Elder\"\n        else then\n          \"Centenarian\"\n        end\n\ndef funcA(x: Num, y: Num): Num => x + y\ndef funcB(x: Num, y: Num, z: Num): Num do\n  foo = x + y\n  bar = foo * z - x\n  bar\nend\n\nfuncA(1, 2)\nfuncB(1 + 2 * 3, 4 / 5 - 6, 7 + funcA(8, 9 + 10 * 11) / 12)\n";
declare const compiled = "let age = 1 + (2 * 3) + 4;\nconst adultBound = 18;\nconst elderBound = 60;\nconst centenarianBound = 100;\nconst stage = age <= adultBound ? 'Teenager' : (age < elderBound ? 'Adult' : (age < centenarianBound ? 'Elder' : 'Centenarian'));\nfunction funcA(x, y) {\n  return x + y;\n}\n\nfunction funcB(x, y, z) {\n  const foo = x + y;\n  const bar = foo * z - x;\n  return bar;\n}\n\nfuncA(1, 2);\nfuncB(1 + (2 * 3), 4 / 5 - 6, 7 + (funcA(8, 9 + (10 * 11)) / 12));\n";
export { program, compiled };
